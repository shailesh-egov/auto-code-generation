serviceMaps:
  serviceName: bank-account
  mappings:
    
    # Bank Account Creation
    - version: 1.0
      name: BankAccounts
      description: Persists bank account details in bank account table
      fromTopic: save-bank-account
      isTransaction: true
      queryMaps:
        
        # Insert main bank account
        - query: INSERT INTO eg_bank_account(id, tenant_id, service_code, reference_id, additional_details, created_by, last_modified_by, created_time, last_modified_time, row_version, is_deleted) VALUES (?,?,?,?,?,?,?,?,?,?,?);
          basePath: $.bankAccounts.*
          jsonMaps:
            - jsonPath: $.bankAccounts.*.id
            - jsonPath: $.bankAccounts.*.tenantId
            - jsonPath: $.bankAccounts.*.serviceCode
            - jsonPath: $.bankAccounts.*.referenceId
            - jsonPath: $.bankAccounts.*.additionalFields
              type: JSON
              dbType: JSONB
            - jsonPath: $.bankAccounts.*.auditDetails.createdBy
            - jsonPath: $.bankAccounts.*.auditDetails.lastModifiedBy
            - jsonPath: $.bankAccounts.*.auditDetails.createdTime
            - jsonPath: $.bankAccounts.*.auditDetails.lastModifiedTime
            - jsonPath: $.bankAccounts.*.rowVersion
            - jsonPath: $.bankAccounts.*.isDeleted

        # Insert bank account details
        - query: INSERT INTO eg_bank_account_detail(id, tenant_id, bank_account_id, account_holder_name, account_number, account_type, is_primary, is_active, additional_details, created_by, last_modified_by, created_time, last_modified_time, row_version, is_deleted) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?);
          basePath: $.bankAccounts.*.bankAccountDetails.*
          jsonMaps:
            - jsonPath: $.bankAccounts.*.bankAccountDetails.*.id
            - jsonPath: $.bankAccounts.*.bankAccountDetails.*.tenantId
            - jsonPath: $.bankAccounts[*][?({id} in @.bankAccountDetails[*].id)].id
            - jsonPath: $.bankAccounts.*.bankAccountDetails.*.accountHolderName
            - jsonPath: $.bankAccounts.*.bankAccountDetails.*.accountNumber
            - jsonPath: $.bankAccounts.*.bankAccountDetails.*.accountType
            - jsonPath: $.bankAccounts.*.bankAccountDetails.*.isPrimary
            - jsonPath: $.bankAccounts.*.bankAccountDetails.*.isActive
            - jsonPath: $.bankAccounts.*.bankAccountDetails.*.additionalFields
              type: JSON
              dbType: JSONB
            - jsonPath: $.bankAccounts.*.bankAccountDetails.*.auditDetails.createdBy
            - jsonPath: $.bankAccounts.*.bankAccountDetails.*.auditDetails.lastModifiedBy
            - jsonPath: $.bankAccounts.*.bankAccountDetails.*.auditDetails.createdTime
            - jsonPath: $.bankAccounts.*.bankAccountDetails.*.auditDetails.lastModifiedTime
            - jsonPath: $.bankAccounts.*.bankAccountDetails.*.rowVersion
            - jsonPath: $.bankAccounts.*.bankAccountDetails.*.isDeleted

        # Insert bank branch identifier
        - query: INSERT INTO eg_bank_branch_identifier(id, bank_account_detail_id, type, code, additional_details, row_version, is_deleted) VALUES (?,?,?,?,?,?,?);
          basePath: $.bankAccounts.*.bankAccountDetails.*.bankBranchIdentifier
          jsonMaps:
            - jsonPath: $.bankAccounts.*.bankAccountDetails.*.bankBranchIdentifier.id
            - jsonPath: $.bankAccounts.*.bankAccountDetails.*.id
            - jsonPath: $.bankAccounts.*.bankAccountDetails.*.bankBranchIdentifier.type
            - jsonPath: $.bankAccounts.*.bankAccountDetails.*.bankBranchIdentifier.code
            - jsonPath: $.bankAccounts.*.bankAccountDetails.*.bankBranchIdentifier.additionalDetails
              type: JSON
              dbType: JSONB
            - jsonPath: $.bankAccounts.*.bankAccountDetails.*.rowVersion
            - jsonPath: $.bankAccounts.*.bankAccountDetails.*.isDeleted

        # Insert documents
        - query: INSERT INTO eg_bank_accounts_doc(id, bank_account_detail_id, document_type, file_store, document_uid, additional_details, row_version, is_deleted) VALUES (?,?,?,?,?,?,?,?);
          basePath: $.bankAccounts.*.bankAccountDetails.*.documents.*
          jsonMaps:
            - jsonPath: $.bankAccounts.*.bankAccountDetails.*.documents.*.id
            - jsonPath: $.bankAccounts[*].bankAccountDetails[*][?({id} in @.documents[*].id)].id
            - jsonPath: $.bankAccounts.*.bankAccountDetails.*.documents.*.documentType
            - jsonPath: $.bankAccounts.*.bankAccountDetails.*.documents.*.fileStoreId
            - jsonPath: $.bankAccounts.*.bankAccountDetails.*.documents.*.documentUid
            - jsonPath: $.bankAccounts.*.bankAccountDetails.*.documents.*.additionalDetails
              type: JSON
              dbType: JSONB
            - jsonPath: $.bankAccounts.*.bankAccountDetails.*.rowVersion
            - jsonPath: $.bankAccounts.*.bankAccountDetails.*.isDeleted

    # Bank Account Update
    - version: 1.0
      name: BankAccounts
      description: Updates bank account details in bank account table
      fromTopic: update-bank-account
      isTransaction: true
      queryMaps:
        
        # Update main bank account
        - query: UPDATE eg_bank_account SET service_code = ?, reference_id = ?, additional_details = ?, last_modified_by = ?, last_modified_time = ?, row_version = ? WHERE id = ? AND is_deleted = false;
          basePath: $.bankAccounts.*
          jsonMaps:
            - jsonPath: $.bankAccounts.*.serviceCode
            - jsonPath: $.bankAccounts.*.referenceId
            - jsonPath: $.bankAccounts.*.additionalFields
              type: JSON
              dbType: JSONB
            - jsonPath: $.bankAccounts.*.auditDetails.lastModifiedBy
            - jsonPath: $.bankAccounts.*.auditDetails.lastModifiedTime
            - jsonPath: $.bankAccounts.*.rowVersion
            - jsonPath: $.bankAccounts.*.id

        # Update/Insert bank account details (UPSERT)
        - query: INSERT INTO eg_bank_account_detail(id, tenant_id, bank_account_id, account_holder_name, account_number, account_type, is_primary, is_active, additional_details, created_by, last_modified_by, created_time, last_modified_time, row_version, is_deleted) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) ON CONFLICT (id) DO UPDATE SET account_holder_name = ?, account_number = ?, account_type = ?, is_primary = ?, is_active = ?, additional_details = ?, last_modified_by = ?, last_modified_time = ?, row_version = ?;
          basePath: $.bankAccounts.*.bankAccountDetails.*
          jsonMaps:
            - jsonPath: $.bankAccounts.*.bankAccountDetails.*.id
            - jsonPath: $.bankAccounts.*.bankAccountDetails.*.tenantId
            - jsonPath: $.bankAccounts[*][?({id} in @.bankAccountDetails[*].id)].id
            - jsonPath: $.bankAccounts.*.bankAccountDetails.*.accountHolderName
            - jsonPath: $.bankAccounts.*.bankAccountDetails.*.accountNumber
            - jsonPath: $.bankAccounts.*.bankAccountDetails.*.accountType
            - jsonPath: $.bankAccounts.*.bankAccountDetails.*.isPrimary
            - jsonPath: $.bankAccounts.*.bankAccountDetails.*.isActive
            - jsonPath: $.bankAccounts.*.bankAccountDetails.*.additionalFields
              type: JSON
              dbType: JSONB
            - jsonPath: $.bankAccounts.*.bankAccountDetails.*.auditDetails.createdBy
            - jsonPath: $.bankAccounts.*.bankAccountDetails.*.auditDetails.lastModifiedBy
            - jsonPath: $.bankAccounts.*.bankAccountDetails.*.auditDetails.createdTime
            - jsonPath: $.bankAccounts.*.bankAccountDetails.*.auditDetails.lastModifiedTime
            - jsonPath: $.bankAccounts.*.bankAccountDetails.*.rowVersion
            - jsonPath: $.bankAccounts.*.bankAccountDetails.*.isDeleted
            # Update fields
            - jsonPath: $.bankAccounts.*.bankAccountDetails.*.accountHolderName
            - jsonPath: $.bankAccounts.*.bankAccountDetails.*.accountNumber
            - jsonPath: $.bankAccounts.*.bankAccountDetails.*.accountType
            - jsonPath: $.bankAccounts.*.bankAccountDetails.*.isPrimary
            - jsonPath: $.bankAccounts.*.bankAccountDetails.*.isActive
            - jsonPath: $.bankAccounts.*.bankAccountDetails.*.additionalFields
              type: JSON
              dbType: JSONB
            - jsonPath: $.bankAccounts.*.bankAccountDetails.*.auditDetails.lastModifiedBy
            - jsonPath: $.bankAccounts.*.bankAccountDetails.*.auditDetails.lastModifiedTime
            - jsonPath: $.bankAccounts.*.bankAccountDetails.*.rowVersion

        # Update/Insert bank branch identifier (UPSERT)
        - query: INSERT INTO eg_bank_branch_identifier(id, bank_account_detail_id, type, code, additional_details, row_version, is_deleted) VALUES (?,?,?,?,?,?,?) ON CONFLICT (bank_account_detail_id) DO UPDATE SET type = ?, code = ?, additional_details = ?, row_version = ?;
          basePath: $.bankAccounts.*.bankAccountDetails.*.bankBranchIdentifier
          jsonMaps:
            - jsonPath: $.bankAccounts.*.bankAccountDetails.*.bankBranchIdentifier.id
            - jsonPath: $.bankAccounts.*.bankAccountDetails.*.id
            - jsonPath: $.bankAccounts.*.bankAccountDetails.*.bankBranchIdentifier.type
            - jsonPath: $.bankAccounts.*.bankAccountDetails.*.bankBranchIdentifier.code
            - jsonPath: $.bankAccounts.*.bankAccountDetails.*.bankBranchIdentifier.additionalDetails
              type: JSON
              dbType: JSONB
            - jsonPath: $.bankAccounts.*.bankAccountDetails.*.rowVersion
            - jsonPath: $.bankAccounts.*.bankAccountDetails.*.isDeleted
            # Update fields
            - jsonPath: $.bankAccounts.*.bankAccountDetails.*.bankBranchIdentifier.type
            - jsonPath: $.bankAccounts.*.bankAccountDetails.*.bankBranchIdentifier.code
            - jsonPath: $.bankAccounts.*.bankAccountDetails.*.bankBranchIdentifier.additionalDetails
              type: JSON
              dbType: JSONB
            - jsonPath: $.bankAccounts.*.bankAccountDetails.*.rowVersion

        # Update/Insert documents (UPSERT)
        - query: INSERT INTO eg_bank_accounts_doc(id, bank_account_detail_id, document_type, file_store, document_uid, additional_details, row_version, is_deleted) VALUES (?,?,?,?,?,?,?,?) ON CONFLICT (id) DO UPDATE SET document_type = ?, file_store = ?, document_uid = ?, additional_details = ?, row_version = ?;
          basePath: $.bankAccounts.*.bankAccountDetails.*.documents.*
          jsonMaps:
            - jsonPath: $.bankAccounts.*.bankAccountDetails.*.documents.*.id
            - jsonPath: $.bankAccounts[*].bankAccountDetails[*][?({id} in @.documents[*].id)].id
            - jsonPath: $.bankAccounts.*.bankAccountDetails.*.documents.*.documentType
            - jsonPath: $.bankAccounts.*.bankAccountDetails.*.documents.*.fileStoreId
            - jsonPath: $.bankAccounts.*.bankAccountDetails.*.documents.*.documentUid
            - jsonPath: $.bankAccounts.*.bankAccountDetails.*.documents.*.additionalDetails
              type: JSON
              dbType: JSONB
            - jsonPath: $.bankAccounts.*.bankAccountDetails.*.rowVersion
            - jsonPath: $.bankAccounts.*.bankAccountDetails.*.isDeleted
            # Update fields
            - jsonPath: $.bankAccounts.*.bankAccountDetails.*.documents.*.documentType
            - jsonPath: $.bankAccounts.*.bankAccountDetails.*.documents.*.fileStoreId
            - jsonPath: $.bankAccounts.*.bankAccountDetails.*.documents.*.documentUid
            - jsonPath: $.bankAccounts.*.bankAccountDetails.*.documents.*.additionalDetails
              type: JSON
              dbType: JSONB
            - jsonPath: $.bankAccounts.*.bankAccountDetails.*.rowVersion

    # Bank Account Soft Delete
    - version: 1.0
      name: BankAccounts
      description: Soft deletes bank account and related records
      fromTopic: delete-bank-account
      isTransaction: true
      queryMaps:
        
        # Soft delete main bank account
        - query: UPDATE eg_bank_account SET is_deleted = true, last_modified_by = ?, last_modified_time = ?, row_version = ? WHERE id = ?;
          basePath: $.bankAccounts.*
          jsonMaps:
            - jsonPath: $.bankAccounts.*.auditDetails.lastModifiedBy
            - jsonPath: $.bankAccounts.*.auditDetails.lastModifiedTime
            - jsonPath: $.bankAccounts.*.rowVersion
            - jsonPath: $.bankAccounts.*.id

        # Soft delete bank account details
        - query: UPDATE eg_bank_account_detail SET is_deleted = true, last_modified_by = ?, last_modified_time = ?, row_version = ? WHERE bank_account_id = ?;
          basePath: $.bankAccounts.*
          jsonMaps:
            - jsonPath: $.bankAccounts.*.auditDetails.lastModifiedBy
            - jsonPath: $.bankAccounts.*.auditDetails.lastModifiedTime
            - jsonPath: $.bankAccounts.*.rowVersion
            - jsonPath: $.bankAccounts.*.id

        # Soft delete bank branch identifiers
        - query: UPDATE eg_bank_branch_identifier SET is_deleted = true, row_version = ? WHERE bank_account_detail_id IN (SELECT id FROM eg_bank_account_detail WHERE bank_account_id = ?);
          basePath: $.bankAccounts.*
          jsonMaps:
            - jsonPath: $.bankAccounts.*.rowVersion
            - jsonPath: $.bankAccounts.*.id

        # Soft delete documents
        - query: UPDATE eg_bank_accounts_doc SET is_deleted = true, row_version = ? WHERE bank_account_detail_id IN (SELECT id FROM eg_bank_account_detail WHERE bank_account_id = ?);
          basePath: $.bankAccounts.*
          jsonMaps:
            - jsonPath: $.bankAccounts.*.rowVersion
            - jsonPath: $.bankAccounts.*.id